// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
id       String   @id @default(uuid())
name     String
email    String   @unique
password String
isAdmin  Boolean @default(false)
isVerified Boolean @default(false)
otp String?
otpExpires DateTime?
project Project[] 
files File[]
createdAt DateTime @default(now()) 
updatedAt DateTime @updatedAt

}
model Project{
  id String @id @default(uuid())
  name String 
  description String
  folder Folder[] 
  isPublic Boolean @default(false)
  user User @relation(fields: [userId], references: [id])
  s3Created Boolean @default(false)
  userId String
  endpoint String
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
}



model Folder {
  id String @id @default(uuid())
  name String
  files File[]
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, projectId])
}

model File{
  id String @id @default(uuid())
  name String
  url String?
  size String?
  user User @relation(fields: [userId], references: [id],onDelete: Cascade)
  userId String
  folder Folder @relation(fields: [folderId], references: [id],onDelete: Cascade)
  folderId String
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt
}
